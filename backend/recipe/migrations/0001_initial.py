# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-19 16:35
from __future__ import unicode_literals

from django.conf import settings
import django.utils.timezone
from django.db import migrations, models
import django.db.models.deletion
from datetime import datetime


def load_categories(apps, schema_editor):
    category = apps.get_model("recipe", "Category")
    db_alias = schema_editor.connection.alias
    category.objects.using(db_alias).bulk_create([
        category(
            name='Sobremesas',
            subtitle='Preparo Rápido'
        ),
        category(
            name='Massas',
            subtitle='Sujando pouca louça'
        ),
        category(
            name='Carnes',
            subtitle='Faça uma vez, coma várias'
        ),
        category(
            name='Peixes e Frutos do Mar',
            subtitle='Mamãe ficaria orgulhosa'
        ),
    ])


def load_ingredients(apps, schema_editor, recipe, ingredients):
    ingredient = apps.get_model("recipe", "Ingredient")
    db_alias = schema_editor.connection.alias
    ingredient.objects.using(db_alias).bulk_create([
        ingredient(recipe=recipe, **ing) for ing in ingredients
    ])


def load_recipes(apps, schema_editor):
    recipe = apps.get_model("recipe", "Recipe")
    category = apps.get_model("recipe", "Category")
    user = apps.get_model("account", "User")
    db_alias = schema_editor.connection.alias

    r = recipe.objects.using(db_alias).create(
        author=user.objects.order_by('?').first(),
        publish_date=django.utils.timezone.make_aware(datetime(2014, 10, 27)),
        name='Batata Rosti',
        description='Batata rosti deliciosamente saborosa.',
        category=category.objects.get(name='Massas'),
        ready_in_time=40,
        portions=1,
        cooking_method='Cozimento',
        nutritional_info='100kcal',
        instructions=(
            'Descasque as batatas e cozinhe-as na panela de pressão por 5 minutos.\n'
            'As batatas não podem cozinhar muito, devem ficar bem durinhas para facilitar na hora de ralar e para ficar crocante.\n'
            'Escorra a água e leve as batatas ao congelador por 15 minutos.\n'
            'Rale as batatas no lado do ralador que possui formato de gotas.\n'
            'Coloque a metade da margarina em uma frigideira e deixe derreter.\n'
            'Adicione metade das batatas cobrindo o fundo da frigideira.\n'
            'Acrescente o recheio.\n'
            'Coloque o requeijão no centro, pois ele se espalha com o calor.\n'
            'Coloque a outra metade das batatas por cima do recheio.\n'
            'Quando a parte de baixo da batata estiver douradinha e soltando do fundo, vire com a ajuda de um prato.\n'
            'Adicione a outra metade da margarina.\n'
            'Retorne com a batata para frigideira para que o outro lado também doure.\n'
            'Sirva quente.\n'
            'Combina com arroz branco ou pode ser consumido como prato único.\n'
            'O recheio pode ser alterado a gosto, por carne bovina cozida, frango desfiado, carne moída')
    )

    load_ingredients(apps, schema_editor, r, [
        {
            'name': 'requeijão',
            'quantity': '1/2',
            'unit': 'colher (sopa)',
        }, {
            'name': 'queijo a gosto (mussarela, provolone ou queijo minas)',
        }, {
            'name': 'sal a gosto',
        }, {
            'name': 'orégano a gosto',
        }, {
            'name': 'batatas médias',
            'quantity': '2',
        }, {
            'name': 'margarina',
            'quantity': '1',
            'unit': 'colher (sopa)',
        }
    ])


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Nome da Categoria')),
                ('subtitle', models.CharField(blank=True, max_length=64, null=True, verbose_name='Subtítulo')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('quantity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Quantidade')),
                ('unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unidade')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome da receita')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('ready_in_time', models.PositiveSmallIntegerField(help_text='(em minutos)', verbose_name='Tempo de preparo')),
                ('portions', models.PositiveSmallIntegerField(verbose_name='Número de porções')),
                ('cooking_method', models.CharField(max_length=255, verbose_name='Método de cozimento')),
                ('nutritional_info', models.CharField(max_length=255, verbose_name='Valor nutricional')),
                ('instructions', models.TextField(verbose_name='Instruções de preparo')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Publicação')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='Número de visualizações')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.Category', verbose_name='Categoria')),
            ],
        ),
        migrations.AddField(
            model_name='ingredient',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipe.Recipe'),
        ),
        migrations.RunPython(load_categories),
        migrations.RunPython(load_recipes),
    ]
