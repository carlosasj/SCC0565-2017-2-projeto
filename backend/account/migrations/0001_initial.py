# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-19 13:47
from __future__ import unicode_literals

import django.contrib.auth.validators
from django.db import migrations, models
from django.contrib.auth.hashers import make_password
import django.utils.timezone
from datetime import datetime


def load_users(apps, schema_editor):
    user = apps.get_model("account", "User")
    db_alias = schema_editor.connection.alias
    user.objects.using(db_alias).create(
        email='admin@admin.net',
        full_name='Admin',
        birthday=django.utils.timezone.make_aware(datetime(1994, 1, 1)),
        city='São Paulo',
        state='SP',
        phone='(11) 999 999 999',
        password=make_password('senhasenha'),
        is_active=True,
        is_staff=True,
        is_superuser=True,
    )
    # u.save(using=db_alias)

    user.objects.using(db_alias).create(
        email='vinicius@exemplo.com',
        full_name='Vinícius Alves Oliveira',
        password=make_password('senhasenha'),
        birthday=django.utils.timezone.make_aware(datetime(1954, 1, 26)),
        city='Sarandi',
        state='PR',
        phone='(44) 6282-6563',
    )
    # u.save(using=db_alias)

    user.objects.using(db_alias).create(
        email='vitoria@exemplo.com',
        full_name='Vitória Cavalcanti Barbosa',
        password=make_password('senhasenha'),
        birthday=django.utils.timezone.make_aware(datetime(1996, 7, 20)),
        city='Teresina',
        state='PI',
        phone='(86) 2117-4827',
    )
    # u.save(using=db_alias)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, default='', max_length=1)),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('full_name', models.CharField(max_length=255, verbose_name='Nome completo')),
                ('birthday', models.DateField(verbose_name='Data de Nascimento')),
                ('city', models.CharField(max_length=255, verbose_name='Cidade')),
                ('state', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, verbose_name='Estado')),
                ('phone', models.CharField(max_length=255, verbose_name='Telefone')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuário',
            },
        ),
        migrations.RunPython(load_users)
    ]
